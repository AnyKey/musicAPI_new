1) Поиск по исполнителю и треку, при этом, если этого трека нету в базе, то нужно его записать в бд
При повторном запросе данные достаются уже из базы (при наличии)

2) Загрузка всех треков исполнителя по альбому (если в бд уже есть - запрос на апишку не делать)

3) Поиск треков по жанру из бд, при запросе ответ должен содержать названия исполнителей и треков

4) Поиск треков по исполнителю, в ответе все треки исполнителя из бд

5) Составление "чарта" (данные из бд) исходя из кол-ва слушателей (listeners)
 и кол-ва воспроизведений (playcount) (чарт сортируется исходя из передаваемого условия)

- sudo docker run --name some-postgres -e POSTGRES_PASSWORD=123 -e POSTGRES_DB=musicdb -d -p 5432:5432 postgres:9.6.21-alpine
sql:

CREATE TABLE artist (
    id        SERIAL NOT NULL PRIMARY KEY,
    name      VARCHAR(45) NOT NULL
    );
CREATE TABLE album (
    id        SERIAL NOT NULL PRIMARY KEY,
    name      VARCHAR(60) NOT NULL
    );
CREATE TABLE tag (
    genre      VARCHAR(60) NOT NULL UNIQUE PRIMARY KEY
    );
CREATE TABLE track (
    name varchar(80) NOT NULL PRIMARY KEY,
    artist_id INTEGER NOT NULL REFERENCES artist(id) ON UPDATE CASCADE,
    album_id INTEGER NOT NULL REFERENCES album(id) ON UPDATE CASCADE,
    listeners INTEGER NOT NULL,
    playcount INTEGER NOT NULL,
    tag VARCHAR(45) NOT NULL REFERENCES tag(genre) ON UPDATE CASCADE
    );


1.Genre, err
2.Tracks, panic in repo (insert into)